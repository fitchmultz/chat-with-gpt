name: Docker Build and Publish to GHCR

on:
  push:
    branches:
      - main
      - dev
      - dev2

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
  
  build-and-push:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/chat-with-gpt:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/chat-with-gpt:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/chat-with-gpt:cache,mode=max

      - name: Trigger Portainer Stack Update
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            curl -X POST ${{ secrets.PORTAINER_WEBHOOK_URL }}
          elif [ "${{ github.ref_name }}" = "dev" ]; then
            curl -X POST ${{ secrets.PORTAINER_WEBHOOK_URL_DEV }}
          elif [ "${{ github.ref_name }}" = "dev2" ]; then
            curl -X POST ${{ secrets.PORTAINER_WEBHOOK_URL_DEV2 }}
          fi

      - name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ghcr.io/${{ github.repository_owner }}/chat-with-gpt:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}
          dockerfile: ./Dockerfile

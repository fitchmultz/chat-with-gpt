name: Docker Build and Publish to GHCR

on:
  push:
    branches:
      - main
      - dev
      - dev2

env:
  PORTAINER_WEBHOOK_URLS: |
    main:${{ secrets.PORTAINER_WEBHOOK_URL }}
    dev:${{ secrets.PORTAINER_WEBHOOK_URL_DEV }}
    dev2:${{ secrets.PORTAINER_WEBHOOK_URL_DEV2 }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: main
          - branch: dev
          - branch: dev2

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
        # Ensures we can push the built Docker image to GHCR.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/chat-with-gpt:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/chat-with-gpt:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/chat-with-gpt:cache,mode=max

      - name: Trigger Portainer Stack Update
        run: |
          URL=$(echo "${{ env.PORTAINER_WEBHOOK_URLS }}" | grep ${{ matrix.branch }} | cut -d ':' -f2)
          curl -X POST $URL
        if: github.ref == 'refs/heads/${{ matrix.branch }}'
        # Triggers an update to the Portainer stack corresponding to the current branch.

      - name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ghcr.io/${{ github.repository_owner }}/chat-with-gpt:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}
          dockerfile: ./Dockerfile
        # Scans the Docker image for vulnerabilities to ensure security before deployment.
